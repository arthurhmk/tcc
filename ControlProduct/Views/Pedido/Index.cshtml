@using ControlProduct.Models.ViewModel
@model List<PedidoViewModel>
@{
    ViewData["Title"] = "Pedidos";
}

<div class="text-center">
    <h1 class="display-4">Pedidos</h1>
</div>

<div class="text-right mb-2">
    <a class="btn btn-primary" asp-action="CadastroPedido">Novo Pedido</a>
</div>

<div class="row">
    <div class="col-12">
        <table class="datatable-pedidos table">
            <thead>
                <tr>
                    <th>Cliente</th>
                    <th>Pedido</th>
                    <th>Valor</th>
                    <th>Data do pedido</th>
                    <th>Data de entrega</th>
                    <th>Local de Entrega</th>
                    <th>Status</th>
                    <th>Valor Pago</th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var pedido in Model)
                {
                    <tr>
                        <td>@pedido.Cliente</td>
                        <td>
                            <button class="btn btn-primary" 
                                    onclick='abrirListaProdutos(@Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(pedido.Pedido)),
                                                                @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(pedido.Extras)))'>
                                @(pedido.Pedido.Count + pedido.Extras.Count) Produto(s)
                            </button>
                        </td>
                        <td class="moneyMask">@pedido.Valor</td>
                        <td>@pedido.DataPedido</td>
                        <td>@pedido.DataEntrega</td>
                        <td>@pedido.LocalEntrega</td>
                        <td>@pedido.Status</td>
                        @if(pedido.StatusEnum == ControlProduct.Models.Enum.EstadoPedido.PENDENTE)
                        {
                            <td class="moneyMask">@pedido.ValorPago</td>
                        }
                        else
                        {
                            <td>-</td>
                        }
                        <td class="text-right">
                            <a asp-action="CadastroPedido" asp-route-idPedido="@pedido.Id">
                                <svg width="1em" height="1em" viewBox="0 0 16 16" class="bi bi-pencil-fill" fill="currentColor" xmlns="http://www.w3.org/2000/svg">
                                    <path fill-rule="evenodd" d="M12.854.146a.5.5 0 0 0-.707 0L10.5 1.793 14.207 5.5l1.647-1.646a.5.5 0 0 0 0-.708l-3-3zm.646 6.061L9.793 2.5 3.293 9H3.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.207l6.5-6.5zm-7.468 7.468A.5.5 0 0 1 6 13.5V13h-.5a.5.5 0 0 1-.5-.5V12h-.5a.5.5 0 0 1-.5-.5V11h-.5a.5.5 0 0 1-.5-.5V10h-.5a.499.499 0 0 1-.175-.032l-.179.178a.5.5 0 0 0-.11.168l-2 5a.5.5 0 0 0 .65.65l5-2a.5.5 0 0 0 .168-.11l.178-.178z" />
                                </svg>
                            </a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

<div id="modalProduto" class="modal shadow-sm rounded border p-4">
    <div class="row justify-content-center">
        <div class="col-12 col-sm-11 col-md-8">
            <h4 class="mb-3">Lista de Produtos</h4>
            <div class="listaProdutos"></div>
        </div>
    </div>
</div>

<script>
    var DataTableConfig = {
        columnDefs: [
            {
                targets: [1, 8],
                orderable: false,
                searchable: false
            }
        ]
    }
</script>

@section Scripts {
    <script>
        $(document).ready(function () {
            setMoneyMask();
            $(".modal").modal();
        });

        function abrirListaProdutos(produtos, extras) {
            $("#modalProduto").find(".listaProdutos").html("");
            for (let i in produtos) {
                prodElem = $(`<span class="form-control text-center"><b class="mr-3">Quantidade: ${produtos[i].Quantidade}</b>${prodDesc(produtos[i].Nome, produtos[i].Valor)}</span></br>`);
                $("#modalProduto").find(".listaProdutos").append(prodElem);
            }
            for (let i in extras) {
                prodElem = $(`<span class="form-control text-center">${prodDesc(extras[i].Nome, extras[i].Valor)}</span></br>`);
                $("#modalProduto").find(".listaProdutos").append(prodElem);
            }
            M.Modal.getInstance($("#modalProduto")[0]).open()
        }
        

        function prodDesc(nome, vl) {
            return nome+ " - " + precoDesc(vl)
        }
        function precoDesc(vl) {
            return new Intl.NumberFormat('pt-BR', { style: 'currency', currency: 'BRL' }).format(vl)
        }
    </script>
}