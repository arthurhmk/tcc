@model Categoria
@{
    ViewData["Title"] = "Nova Categoria";
}

<div class="text-center mb-3">
    <h1 class="display-4">Cadastro de Categoria</h1>
</div>

<div class="row justify-content-md-center">
    <div class="col-12 col-sm-10 border rounded shadow-sm p-3">
        <p class="text-muted">
            Escolha um nome único para a categoria.
        </p>
        <form asp-action="CadastroCategoria" method="post" autocomplete="off">
            <input type="hidden" asp-for="Id" />

            <div class="form-group">
                <label asp-for="Nome"></label>
                <input asp-for="Nome" class="form-control" />
            </div>


            <div class="form-group mb-4">
                <label>Produtos do Pedido</label><br />
                <a class="btn btn-outline-primary modal-trigger" style="cursor:pointer" href="#modalProduto">Cadastrar Produtos</a>
            </div>

            <button type="submit" class="btn btn-primary">@(Model.Id != 0 ? "Atualizar" : "Cadastrar")</button>
            @if (Model.Id != 0)
            {
                <a asp-action="RemoverCategoria" asp-route-idCategoria="@Model.Id" class="btn btn-danger">Excluir</a>
            }

            <div class="error-list pt-3"></div>
        </form>
    </div>
</div>

<div id="modalProduto" class="modal custom-modal shadow-sm rounded border">
    <div class="row">
        <div class="col-5 border-right p-3">
            <h4>Lista de Produtos</h4>
            @{
                var categorias = (List<Categoria>)ViewBag.categorias;
            }
            @if (categorias.Any())
            {
                <div id="categoriasList" class="row">
                    @for (var i = 0; i < categorias.Count; i++)
                    {
                        <div class="col-4 categoriaButton collapsed p-1" data-toggle="collapse" data-target="#cat@(i)" aria-expanded="false" aria-controls="cat@(i)">
                            <button class="btn btn-outline-primary w-100">
                                @categorias[i].Nome
                            </button>
                        </div>

                        <div id="cat@(i)" class="collapse collapsed col-12 produtosList" data-parent="#categoriasList">
                            <div class="card-body">
                                @if (categorias[i].Produtos.Where(p => p.Ativo == ControlProduct.Models.Enum.EstadoProduto.ATIVO).Any())
                                {
                                    @foreach (var prod in categorias[i].Produtos.Where(p => p.Ativo == ControlProduct.Models.Enum.EstadoProduto.ATIVO))
                                    {
                                        <span class="waves-effect waves-teal btn-small btn-flat" style="width:100%" onclick="addProduto(@prod.Id, `@prod.Nome`)">@prod.Nome</span><br />
                                        <hr />
                                    }
                                }
                                else
                                {
                                    <i>Não há produtos nesta categoria</i><br />
                                    <hr />
                                }
                            </div>
                        </div>
                    }
                </div>
            }
            else
            {
                <i>Não há outras categorias cadastradas</i><br />
            }
        </div>
        <div class="col-7 p-3">
            <h4>Produtos da categoria</h4>

            <div id="listaProduto">
                <div class="row produtoCat">
                    <div class="col-12 col-xl-6 d-flex">
                        <svg width="1em" height="1em" viewBox="0 0 16 16" class="bi bi-x-circle-fill produto-remove-button" fill="currentColor" xmlns="http://www.w3.org/2000/svg">
                            <path fill-rule="evenodd" d="M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zM5.354 4.646a.5.5 0 1 0-.708.708L7.293 8l-2.647 2.646a.5.5 0 0 0 .708.708L8 8.707l2.646 2.647a.5.5 0 0 0 .708-.708L8.707 8l2.647-2.646a.5.5 0 0 0-.708-.708L8 7.293 5.354 4.646z" />
                        </svg>
                        <span class="form-control text-center produtoDesc" style="margin:auto">Prod 1</span>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section scripts{
    <partial name="_ValidationScriptsPartial" />
}

<script>
    var produtos = []
    window.addEventListener("load", function () {
        $('.modal').modal();
        
        produtoCat = $(".produtoCat");
        produtoCat.remove();

        $(".categoriaButton").on('click', function () {
            $('.categoriaButton').removeClass('col-12').addClass('col-4')

            if ($(this).hasClass('collapsed')) {
                $(this).removeClass('col-4').addClass('col-12')
            }
        });

        $("form").submit(function (e) {
            e.preventDefault();
            $(this).validate().form();
            var errorList = $(this).validate().errorList;

            if (!errorList.length) {
                let data = getFormData($(this));
                data.produtos = produtos.map(p => { return { Id: p.id, Nome: p.nome } });
                $(".loading").removeClass("d-none");
                $.ajax({
                    url: $(this).attr("action"),
                    method: "post",
                    data: data
                })
                    .done(function (d) {
                        $("#messageBox").find("h4").html("Sucesso!");
                        $("#messageBox").modal({ dismissible: false });
                        $("#messageBox").find("p").html("Categoria registrada com sucesso.<br>Redirecionando para a página principal...");
                        M.Modal.getInstance($("#messageBox")[0]).open()

                        setTimeout(function () { window.location.href = d.route; }, 2000);
                    })
                    .fail(function (d) {
                        $("#messageBox").find("h4").html("Um erro ocorreu!");
                        $("#messageBox").find("p").html("Não foi possível registrar a categoria.<br>Verifique os dados e tente novamente.");
                        M.Modal.getInstance($("#messageBox")[0]).open()
                    })
                    .always(function (d) {
                        $(".loading").addClass("d-none");
                    });
            }
            else {
                $(".error-list").html("");
                for (var i in errorList) {
                    $(".error-list").append(`<p class='error-item text-danger'>${errorList[i].message}</p>`);
                }
            }
        });

        $("form").find(".btn-danger").click(function (e) {
            e.preventDefault();

            $("#modalExclusao").find(".btn-danger").attr("href", $("form").find(".btn-danger").attr("href"));
            M.Modal.getInstance($("#modalExclusao")[0]).open()
        });

        

        @{
            if (Model.Produtos != null)
            {
                foreach (var produto in Model.Produtos)
                {
                    @Html.Raw($"addUnremovableProduto({produto.Id},'{produto.Nome}');");
                }
            }
        }
    });


    function addProduto(id, nome) {
        if (!produtos.filter(p => p.id == id).length) {
            produtos.push({ "id": id, "nome": nome })

            let newProdutoCat = produtoCat.clone();
            $(newProdutoCat).attr("id","produtoCat" + id);
            $(newProdutoCat).find("svg").click(function () {
                removeProduto(id)
            });
            $(newProdutoCat).find(".produtoDesc").html(nome);

            $("#listaProduto").append(newProdutoCat);
        }
    }

    function addUnremovableProduto(id, nome) {
        if (!produtos.filter(p => p.id == id).length) {

            let newProdutoCat = produtoCat.clone();
            $(newProdutoCat).attr("id", "produtoCat" + id);
            $(newProdutoCat).find("svg").remove();
            $(newProdutoCat).find(".produtoDesc").html(nome);

            $("#listaProduto").append(newProdutoCat);
        }
    }

    function removeProduto(id) {
        let remover = produtos.filter(p => p.id == id);
        if (remover.length) {
            produtos.splice(produtos.indexOf(remover[0]), 1);
            $("#produtoCat" + id).remove();
        }
        updateTotal();
    }
</script>